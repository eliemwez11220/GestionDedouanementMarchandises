<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Declarant extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Declarant_model');
    } 

    /*
     * Listing of declarants
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('declarant/index?');
        $config['total_rows'] = $this->Declarant_model->get_all_declarants_count();
        $this->pagination->initialize($config);

        $data['declarants'] = $this->Declarant_model->get_all_declarants($params);
        
        $data['_view'] = 'declarant/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new declarant
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('nomDeclarant','NomDeclarant','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'nomDeclarant' => $this->input->post('nomDeclarant'),
				'telephone' => $this->input->post('telephone'),
				'adresse' => $this->input->post('adresse'),
				'email' => $this->input->post('email'),
            );
            
            $declarant_id = $this->Declarant_model->add_declarant($params);
            redirect('declarant/index');
        }
        else
        {            
            $data['_view'] = 'declarant/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a declarant
     */
    function edit($matricule)
    {   
        // check if the declarant exists before trying to edit it
        $data['declarant'] = $this->Declarant_model->get_declarant($matricule);
        
        if(isset($data['declarant']['matricule']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('nomDeclarant','NomDeclarant','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'nomDeclarant' => $this->input->post('nomDeclarant'),
					'telephone' => $this->input->post('telephone'),
					'adresse' => $this->input->post('adresse'),
					'email' => $this->input->post('email'),
                );

                $this->Declarant_model->update_declarant($matricule,$params);            
                redirect('declarant/index');
            }
            else
            {
                $data['_view'] = 'declarant/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The declarant you are trying to edit does not exist.');
    } 

    /*
     * Deleting declarant
     */
    function remove($matricule)
    {
        $declarant = $this->Declarant_model->get_declarant($matricule);

        // check if the declarant exists before trying to delete it
        if(isset($declarant['matricule']))
        {
            $this->Declarant_model->delete_declarant($matricule);
            redirect('declarant/index');
        }
        else
            show_error('The declarant you are trying to delete does not exist.');
    }
    
}
