<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Marchandise extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Marchandise_model');
    } 

    /*
     * Listing of marchandises
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('marchandise/index?');
        $config['total_rows'] = $this->Marchandise_model->get_all_marchandises_count();
        $this->pagination->initialize($config);

        $data['marchandises'] = $this->Marchandise_model->get_all_marchandises($params);
        
        $data['_view'] = 'marchandise/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new marchandise
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('client_sid','Client Sid','required');
		$this->form_validation->set_rules('cotation_sid','Cotation Sid','required');
		$this->form_validation->set_rules('designation','Designation','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'client_sid' => $this->input->post('client_sid'),
				'cotation_sid' => $this->input->post('cotation_sid'),
				'bonLivraison_sid' => $this->input->post('bonLivraison_sid'),
				'designation' => $this->input->post('designation'),
				'quantite' => $this->input->post('quantite'),
				'poids' => $this->input->post('poids'),
				'volume' => $this->input->post('volume'),
            );
            
            $marchandise_id = $this->Marchandise_model->add_marchandise($params);
            redirect('marchandise/index');
        }
        else
        {
			$this->load->model('Demandeclient_model');
			$data['all_demandeclients'] = $this->Demandeclient_model->get_all_demandeclients();

			$this->load->model('Bonlivraison_model');
			$data['all_bonlivraisons'] = $this->Bonlivraison_model->get_all_bonlivraisons();
            
            $data['_view'] = 'marchandise/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a marchandise
     */
    function edit($mar_id)
    {   
        // check if the marchandise exists before trying to edit it
        $data['marchandise'] = $this->Marchandise_model->get_marchandise($mar_id);
        
        if(isset($data['marchandise']['mar_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('client_sid','Client Sid','required');
			$this->form_validation->set_rules('cotation_sid','Cotation Sid','required');
			$this->form_validation->set_rules('designation','Designation','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'client_sid' => $this->input->post('client_sid'),
					'cotation_sid' => $this->input->post('cotation_sid'),
					'bonLivraison_sid' => $this->input->post('bonLivraison_sid'),
					'designation' => $this->input->post('designation'),
					'quantite' => $this->input->post('quantite'),
					'poids' => $this->input->post('poids'),
					'volume' => $this->input->post('volume'),
                );

                $this->Marchandise_model->update_marchandise($mar_id,$params);            
                redirect('marchandise/index');
            }
            else
            {
				$this->load->model('Demandeclient_model');
				$data['all_demandeclients'] = $this->Demandeclient_model->get_all_demandeclients();

				$this->load->model('Bonlivraison_model');
				$data['all_bonlivraisons'] = $this->Bonlivraison_model->get_all_bonlivraisons();

                $data['_view'] = 'marchandise/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The marchandise you are trying to edit does not exist.');
    } 

    /*
     * Deleting marchandise
     */
    function remove($mar_id)
    {
        $marchandise = $this->Marchandise_model->get_marchandise($mar_id);

        // check if the marchandise exists before trying to delete it
        if(isset($marchandise['mar_id']))
        {
            $this->Marchandise_model->delete_marchandise($mar_id);
            redirect('marchandise/index');
        }
        else
            show_error('The marchandise you are trying to delete does not exist.');
    }
    
}
