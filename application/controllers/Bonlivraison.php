<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Bonlivraison extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Bonlivraison_model');
    } 

    /*
     * Listing of bonlivraisons
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('bonlivraison/index?');
        $config['total_rows'] = $this->Bonlivraison_model->get_all_bonlivraisons_count();
        $this->pagination->initialize($config);

        $data['bonlivraisons'] = $this->Bonlivraison_model->get_all_bonlivraisons($params);
        
        $data['_view'] = 'bonlivraison/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new bonlivraison
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('numBon','NumBon','required|is_unique[numBon]');
		$this->form_validation->set_rules('declarant_sid','Declarant Sid','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'declarant_sid' => $this->input->post('declarant_sid'),
				'numBon' => $this->input->post('numBon'),
				'dateBon' => $this->input->post('dateBon'),
				'Concernee' => $this->input->post('Concernee'),
				'dateDedouane' => $this->input->post('dateDedouane'),
				'observation' => $this->input->post('observation'),
            );
            
            $bonlivraison_id = $this->Bonlivraison_model->add_bonlivraison($params);
            redirect('bonlivraison/index');
        }
        else
        {
			$this->load->model('Declarant_model');
			$data['all_declarants'] = $this->Declarant_model->get_all_declarants();
            
            $data['_view'] = 'bonlivraison/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a bonlivraison
     */
    function edit($bon_id)
    {   
        // check if the bonlivraison exists before trying to edit it
        $data['bonlivraison'] = $this->Bonlivraison_model->get_bonlivraison($bon_id);
        
        if(isset($data['bonlivraison']['bon_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('numBon','NumBon','required|is_unique[numBon]');
			$this->form_validation->set_rules('declarant_sid','Declarant Sid','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'declarant_sid' => $this->input->post('declarant_sid'),
					'numBon' => $this->input->post('numBon'),
					'dateBon' => $this->input->post('dateBon'),
					'Concernee' => $this->input->post('Concernee'),
					'dateDedouane' => $this->input->post('dateDedouane'),
					'observation' => $this->input->post('observation'),
                );

                $this->Bonlivraison_model->update_bonlivraison($bon_id,$params);            
                redirect('bonlivraison/index');
            }
            else
            {
				$this->load->model('Declarant_model');
				$data['all_declarants'] = $this->Declarant_model->get_all_declarants();

                $data['_view'] = 'bonlivraison/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The bonlivraison you are trying to edit does not exist.');
    } 

    /*
     * Deleting bonlivraison
     */
    function remove($bon_id)
    {
        $bonlivraison = $this->Bonlivraison_model->get_bonlivraison($bon_id);

        // check if the bonlivraison exists before trying to delete it
        if(isset($bonlivraison['bon_id']))
        {
            $this->Bonlivraison_model->delete_bonlivraison($bon_id);
            redirect('bonlivraison/index');
        }
        else
            show_error('The bonlivraison you are trying to delete does not exist.');
    }
    
}
